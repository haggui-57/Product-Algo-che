//function must return a value 
FUNCTION dot_product(v1,v2:ARRAY_OF INTEGER) : INTEGER
VAR
    i,dot:INTEGER
BEGIN
    IF (v1.length<>v2.length) THEN
        Write("vectors with different sizes we cannot calculate dot product")
        RETURN NaN   //not definite Number
    END_IF
WHILE (i<v1.length) DO
    dot:=dot+v1[i]*v2[i]
END_WHILE

    RETURN dot ;
END


// same previous algorithm but procedure instead of function
 PROCEDURE dot_product(v1,v2:ARRAY_OF INTEGER,VAR dot:INTEGER)
 VAR
     i:INTEGER
 BEGIN
 dot:=0 i:=0
    IF (v1.length<>v2.length) THEN
        Write("vectors with different sizes we cannot calculate dot product")
     dot:=NaN
     END_IF
     WHILE (i<v1.length) DO
    dot:=dot+v1[i]*v2[i]
END_WHILE
 END

 // invoke the  dot_product procedure 
 dot_product(v1,v2, dot)
 Write(dot)

 
 //invoke the dot_product function
 VAR  result
 result:=dot_product(v1,v2)
 Write (result)